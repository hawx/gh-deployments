#!/usr/bin/env sh

GITHUB_URL='https://api.github.com'
USER='hawx'
TOKEN='38cada93e17b2b8e8db58461394c4661b59690b4'
AUTH="$USER:$TOKEN"

get_first_id() {
  grep 'id' | head -n 1 | sed -ne 's/.*: \([0-9]*\),.*/\1/p'
}

get_id() {
  curl -u "$AUTH" -XGET "$GITHUB_URL/repos/$1/deployments?ref=$2" 2>/dev/null | get_first_id
}

list_deployments() {
  curl -u "$AUTH" -XGET "$GITHUB_URL/repos/$1/deployments" 2>/dev/null
}

create_deployment() {
  curl -u "$AUTH" -XPOST "$GITHUB_URL/repos/$1/deployments" --data "{\"ref\": \"$2\", \"environment\": \"$3\"}" 2>/dev/null
}

get_status() {
  curl -u "$AUTH" -XGET "$GITHUB_URL/repos/$1/deployments/$2/statuses" 2>/dev/null
}

set_status() {
  curl -u "$AUTH" -XPOST "$GITHUB_URL/repos/$1/deployments/$2/statuses" --data "{\"state\": \"$3\", \"target_url\": \"http://example.com\"}" 2>/dev/null
}

case "$1" in
  'pending')
    if [ "$#" -ne 4 ]; then
      echo "pending: REPO REF ENVIRONMENT required"
      exit 1
    fi
    
    REPO="$2"
    REF="$3"
    ENVIRONMENT="$4"
    
    ID=`create_deployment "$REPO" "$REF" "$ENVIRONMENT"`
    set_status "$REPO" "$ID" 'pending'
    ;;
  'success')
    if [ "$#" -ne 3 ]; then
      echo "success: REPO REF required"
      exit 1
    fi
    
    REPO="$2"
    REF="$3"
    
    ID=`get_id "$REPO" "$REF"`
    set_status "$REPO" "$ID" 'success'
    ;;
  'failure')
    if [ "$#" -ne 3 ]; then
      echo "failure: REPO REF required"
      exit 1
    fi
    
    REPO="$2"
    REF="$3"
    
    ID=`get_id "$REPO" "$REF"`
    set_status "$REPO" "$ID" 'failure'
    ;;
  *) 
    echo "Usage: $0 \
      
      pending REPO REF ENVIRONMENT URL
      success REPO REF
      failure REPO REF
    " 
    ;;
esac



